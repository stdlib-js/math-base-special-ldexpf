{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/12.2.0/lib/msun/src/s_scalbnf.c?view=markup}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float32-pinf';\nimport copysignf from '@stdlib/math-base-special-copysignf';\nimport toWord from '@stdlib/number-float32-base-to-word';\nimport fromWord from '@stdlib/number-float32-base-from-word';\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\n\n\n// VARIABLES //\n\nvar TWO25 = 33554432.0; // 0x4c000000\nvar TWOM25 = 2.9802322387695312e-8; // 0x33000000\n\n\n// MAIN //\n\n/**\n* Multiplies a single-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} single-precision floating-point number\n*\n* @example\n* var x = ldexpf( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexpf( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexpf( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexpf( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexpf( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexpf( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexpf( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexpf( frac, exp ) {\n\tvar ix;\n\tvar k;\n\n\tfrac = float64ToFloat32( frac );\n\tix = toWord( frac );\n\n\t// Extract exponent\n\tk = ( ix & 0x7f800000 ) >> 23;\n\n\t// 0 or subnormal frac\n\tif ( k === 0 ) {\n\t\tif ( ( ix & 0x7fffffff ) === 0 ) {\n\t\t\t// +-0\n\t\t\treturn frac;\n\t\t}\n\t\tfrac = float64ToFloat32( frac * TWO25 );\n\t\tix = toWord( frac );\n\t\tk = ( ( ix & 0x7f800000 ) >> 23 ) - 25;\n\t\tif ( exp < -50000 ) {\n\t\t\t// Underflow\n\t\t\treturn 0.0;\n\t\t}\n\t}\n\n\t// NaN or Inf\n\tif ( k === 0xff ) {\n\t\treturn float64ToFloat32( frac + frac );\n\t}\n\tk += exp;\n\tif ( k > 0xfe ) {\n\t\t// Overflow\n\t\treturn copysignf( PINF, frac );\n\t}\n\tif ( k > 0 ) {\n\t\t// Normal result\n\t\tfrac = fromWord( ( ix & 0x807fffff ) | ( k << 23 ) );\n\t\treturn frac;\n\t}\n\tif ( k <= -25 ) {\n\t\tif ( exp > 50000 ) {\n\t\t\t// In case of integer overflow in n + k\n\t\t\treturn copysignf( PINF, frac );\n\t\t}\n\n\t\t// Underflow\n\t\treturn copysignf( 0.0, frac );\n\t}\n\n\t// Subnormal result\n\tk += 25;\n\tfrac = fromWord( ( ix & 0x807fffff ) | ( k << 23 ) );\n\treturn float64ToFloat32( frac * TWOM25 );\n}\n\n\n// EXPORTS //\n\nexport default ldexpf;\n"],"names":["ldexpf","frac","exp","ix","k","float64ToFloat32","toWord","copysignf","PINF","fromWord"],"mappings":";;8fAsFA,SAASA,EAAQC,EAAMC,GACtB,IAAIC,EACAC,EASJ,GAPAH,EAAOI,EAAkBJ,GAOd,KAHXG,GAAW,YAHXD,EAAKG,EAAQL,MAGc,IAGZ,CACd,GAA6B,IAAjB,WAALE,GAEN,OAAOF,EAKR,GAHAA,EAAOI,EAzDG,SAyDeJ,GAEzBG,IAAa,YADbD,EAAKG,EAAQL,MACgB,IAAO,GAC/BC,GAAO,IAEX,OAAO,CAER,CAGD,OAAW,MAANE,EACGC,EAAkBJ,EAAOA,IAEjCG,GAAKF,GACI,IAEDK,EAAWC,EAAMP,GAEpBG,EAAI,EAERH,EAAOQ,EAAiB,WAALN,EAAsBC,GAAK,IAG1CA,IAAM,GAGFG,EAFHL,EAAM,IAEQM,EAID,EAJOP,IAS1BA,EAAOQ,EAAiB,WAALN,GADnBC,GAAK,KACyC,IACvCC,EA5FK,sBA4FaJ,GAC1B"}